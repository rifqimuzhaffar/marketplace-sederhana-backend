// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String
  email      String    @unique
  password   String
  role       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Purchases  Purchase[]
  Carts      Cart[]
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  price       Int
  description String
  img_url     String
  available   Boolean
  purchaseItems PurchaseItem[]
  Carts       Cart[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Cart {
  id        Int      @id @default(autoincrement())
  quantity  Int
  userId    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Purchase {
  id           Int            @id @default(autoincrement())
  totalPrice   Float
  userId       Int
  status       String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  purchaseItems PurchaseItem[]
}

model PurchaseItem {
  id         Int      @id @default(autoincrement())
  quantity   Int
  total      Float
  purchaseId Int
  productId  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
} 